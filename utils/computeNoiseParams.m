function [avgNoiseSpectrum, noiseBandwidth, covMatrix] = computeNoiseParams(inputData)  % compute covariance matrix  dataSize = size(inputData)  nPhaseEncodes = dataSize(1);  nSamples = dataSize(2);  nChannels = dataSize(3);  covMatrix = zeros([nChannels, nChannels]);  for ii = 1:nChannels   for jj = 1:nChannels     noiseFromI = squeeze(inputData(1, :, ii));         noiseFromJ = squeeze(inputData(1, :, jj));         covMatrix(ii, jj) = (1/nSamples) * sum(conj(noiseFromI) .* noiseFromJ);   end      end      % measure average noise power spectrum  avgNoiseSpectrum = zeros([nSamples 1]);  for ii = 1:nChannels   for jj = 1:nPhaseEncodes          singleNoiseTR = squeeze(inputData(jj, :, ii));      singleNoiseSpectrum = abs(fftc(singleNoiseTR));     singleNoisePowerSpectrum = singleNoiseSpectrum .* singleNoiseSpectrum;     avgNoiseSpectrum = avgNoiseSpectrum + singleNoisePowerSpectrum';   end   end  % calculate the noise bandwidth from the pectrum  centerIndex = round(nSamples/2);  tenPercentWindow = centerIndex - (round(.05*nSamples)) : 1 : centerIndex + (round(.05*nSamples));  centerResponse = mean(avgNoiseSpectrum(tenPercentWindow));  noiseBandwidth = (1/(nSamples * centerResponse)) * sum(avgNoiseSpectrum); end