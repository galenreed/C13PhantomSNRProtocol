function [integratedData totalSpec] = MRSIToImage(inputData, params, header)  maskType = 1;  dataSize = size(inputData);  nf = dataSize(1);  nx = dataSize(2);  ny = dataSize(3);    sweepWidth = header.image.user0;  FIDTimeDomain = linspace(0, nf/sweepWidth, nf);  fidWindow = exp(-FIDTimeDomain * params.lineBroadening);  freqDomain = linspace(-sweepWidth/2, sweepWidth/2, nf);    integratedData = zeros([nx ny]);      sosSummedOverY = sum(inputData, 3);  totalSpec = sum(sosSummedOverY, 2);        if(maskType == 1) % a hard coded window    integrationPoints = round((params.integrationWindow /sweepWidth)* nf);    lb = nf/2 - round(integrationPoints/2);    ub = nf/2 + round(integrationPoints/2);    integrationBounds = [lb,ub];    mask = max(totalSpec)*ones(size(totalSpec));    mask(1:lb-1) = 0;    mask(ub+1:end) = 0;  else % use peak detection algorithm        dirtyMask = peakDetect(totalSpec);    % clean up the mask a bit.     structuringElement = strel('line',5,90);    erodedMask = imerode(dirtyMask, structuringElement);    dilatedMask = imdilate(erodedMask, structuringElement);     dilatedMask = imdilate(dilatedMask, structuringElement);     mask = dilatedMask * max(totalSpec);  end  maskIndices = find(mask>0);        for ii = 1:ny    for jj = 1:nx      thisSpec = squeeze(inputData(:, jj, ii));      integratedData(jj, ii) = sum(thisSpec(maskIndices));       end  end      if(params.doPlot == 1)            figure();    plot(freqDomain, totalSpec,...         freqDomain, mask);    set(gca, 'fontsize', params.plotFontSize);    xlabel('freq [Hz]');         h1 = legend('summed spec', 'integration mask');    set(h1, 'fontsize', params.plotFontSize);    set(gca, 'fontsize', params.plotFontSize);  end  end